{"version":3,"file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-7bf38dac4d85e12c7758.js","mappings":"iQA8BA,EA1BiB,SAAH,OAAMA,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAAO,OAC5C,wBACE,uBACE,QAAC,QAAS,CACRC,GAAI,CACFC,GAAI,KAGN,QAAC,OAAQ,CACPC,GAAIC,EAAAA,KACJH,GAAI,CACFI,eAAe,QAEjBC,GAAIR,GAEHD,GAASC,KAGd,qBAAQC,KAEV,wBACE,QAAC,OAAQ,KAAEC,IAEL,E,UChBZ,EARiB,SAAH,OAAMO,EAAK,EAALA,MAAK,OACvB,wBACGA,EAAMC,KAAI,SAACC,GAAI,OACd,QAAC,GAAQ,QAACC,IAAKD,EAAKX,MAAUW,GAAQ,IAEvC,E,UCWL,EAbiB,SAAH,OAAME,EAAQ,EAARA,SAAUJ,EAAK,EAALA,MAAOK,EAAS,EAATA,UAAWC,EAAW,EAAXA,YAAW,OACzD,yBACE,QAACC,EAAA,EAAU,OACX,QAAC,IAAM,CAACH,SAAUA,EAAUd,MAAOe,IACjC,cAAIG,UAAU,eAAc,aAC5B,qBACE,QAAC,EAAQ,CAACR,MAAOA,MAEnB,QAAC,IAAM,CAACM,YAAaA,KAEtB,ECbL,ECAqB,SAAH,GAA4B,IAAtBF,EAAQ,EAARA,SAAUK,EAAI,EAAJA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,QAAC,EAAK,CACJP,SAAUA,EACVJ,MAAOW,EAAYC,MACnBP,UAAWK,EAAKG,aAAavB,MAC7BgB,YAAaI,EAAKG,aAAaC,QAGrC,C,yDCgBA,IA1BkB,SAAH,OAAMR,EAAW,EAAXA,YAAW,OAC9B,eAAKS,MAAO,CAACC,UAAW,SAAUC,QAAS,UAAU,gBAEnD,IAAK,IACL,IACCX,EACGA,EAAYL,KAAI,SAACiB,EAAUC,EAAGC,GAAG,OACjC,QAAC,EAAAC,SAAQ,CAAClB,IAAKe,EAASI,MACtB,QAAC,OAAQ,CACPC,KAAML,EAASI,IACfE,OAAO,SACPC,IAAI,uBAEHP,EAASQ,MAEXN,EAAIO,OAAS,IAAMR,IAClB,QAAC,EAAAE,SAAQ,SACF,IAAM,KAGN,IAEX,KACA,C","sources":["webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack://gatsby-starter-blog-theme/./src/gatsby-theme-blog/components/posts.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack://gatsby-starter-blog-theme/./src/gatsby-theme-blog/components/home-footer.js"],"sourcesContent":["/** @jsx jsx */\nimport { Themed, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <article>\n    <header>\n      <Themed.h2\n        sx={{\n          mb: 1,\n        }}\n      >\n        <Themed.a\n          as={Link}\n          sx={{\n            textDecoration: `none`,\n          }}\n          to={slug}\n        >\n          {title || slug}\n        </Themed.a>\n      </Themed.h2>\n      <small>{date}</small>\n    </header>\n    <section>\n      <Themed.p>{excerpt}</Themed.p>\n    </section>\n  </article>\n)\n\nexport default PostLink\n","import * as React from \"react\"\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map((node) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import * as React from \"react\"\nimport Layout from \"gatsby-theme-blog/src/components/layout\"\nimport Footer from \"gatsby-theme-blog/src/components/home-footer\"\nimport PostList from \"gatsby-theme-blog/src/components/post-list\"\nimport Navigation from \"../../components/Navigation\"\n\nconst NewPosts = ({ location, posts, siteTitle, socialLinks }) => (\n  <>\n    <Navigation />\n    <Layout location={location} title={siteTitle}>\n      <h1 className=\"text-center\">My Blogs</h1>\n      <main>\n        <PostList posts={posts} />\n      </main>\n      <Footer socialLinks={socialLinks} />\n    </Layout>\n  </>\n)\n\nexport default NewPosts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery($limit: Int!, $filter: BlogPostFilterInput) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(\n      sort: { fields: [date, title], order: DESC }\n      filter: $filter\n      limit: $limit\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Posts from \"../../components/posts\"\n\nconst PostsWrapper = ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.nodes}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n\nexport default PostsWrapper\n","import React, { Fragment } from \"react\"\nimport { Themed } from \"theme-ui\"\n\nconst NewFooter = ({ socialLinks }) => (\n  <div style={{textAlign: \"center\", padding: \"1% 0%\"}}>\n    @Wanjing Chen\n    {` `}&bull;\n    {` `}\n    {socialLinks\n      ? socialLinks.map((platform, i, arr) => (\n        <Fragment key={platform.url}>\n          <Themed.a\n            href={platform.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {platform.name}\n          </Themed.a>\n          {arr.length - 1 !== i && (\n            <Fragment>\n              {` `}&bull;{` `}\n            </Fragment>\n          )}\n        </Fragment>\n      ))\n      : null}\n  </div>\n);\n\nexport default NewFooter"],"names":["title","slug","date","excerpt","sx","mb","as","Link","textDecoration","to","posts","map","node","key","location","siteTitle","socialLinks","Navigation","className","data","site","allBlogPost","nodes","siteMetadata","social","style","textAlign","padding","platform","i","arr","Fragment","url","href","target","rel","name","length"],"sourceRoot":""}